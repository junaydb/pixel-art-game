{
  "compilerOptions": {
    "target": "es2016",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "lib": ["es6"],                                      /* Specify a set of bundled library declaration files that describe the target runtime environment. */

    /* Modules */
    "module": "commonjs",                                /* Specify what module code is generated. */
    "baseUrl": ".",                                      /* Specify the base directory to resolve non-relative module names. */
    "paths": {                                           /* Specify a set of entries that re-map imports to additional lookup locations. */
      "@/*": ["./src/*"], 
      "@/shared/*": ["../shared/*"] 
    },
    "resolveJsonModule": true,                           /* Enable importing .json files. */

    /* JavaScript Support */
    "allowJs": true,                                     /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */

    /* Emit */
    "outDir": "dist",                                    /* Specify an output folder for all emitted files. */

    /* Interop Constraints */
    "allowSyntheticDefaultImports": true,                /* Allow 'import x from y' when a module doesn't have a default export. */
    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

    /* Type Checking */
    "strict": true,                                      /* Enable all strict type-checking options. */
    "noImplicitAny": true,                               /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    /* CHANGE TO `true` FOR PROD */
    "noUnusedLocals": false,                              /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": false,                          /* Raise an error when a function parameter isn't read. */

    /* Completeness */
    "skipLibCheck": true                                  /* Skip type checking all .d.ts files. */
  },

  "exclude": [
    "build"
  ]
}
